<?xml version="1.0" encoding="UTF-8"?>
<project name="hw2" default="dist" basedir=".">
    <!-- set global properties for this build -->
    <property name="hostname" value="localhost"/>
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="lib"  value="lib"/>
    <property name="dist"  location="dist"/>
    <!-- codebase properties -->
    <property name="computer_file_codebase" location="${dist}/computer/"/>
    <property name="computer_web_codebase" value="file://${dist}/computer/"/>
    <property name="client_file_codebase" location="${dist}/client/"/>
    <property name="client_web_codebase" value="file://${dist}/client/"/>
    <target name="compile" description="compile the source">
        <!-- Create the build directory structure used by compile -->
        <mkdir dir="${build}"/>  
  
        <!-- Compile the java code from ${src} into ${build} -->
        <javac includeantruntime="false" srcdir="${src}" destdir="${build}">
            <classpath>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <target name="build" depends="compile" description="generate the distribution" >
        <!-- Create the distribution directory -->
        <mkdir dir="${dist}"/>

        <!-- Make computer jar file -->
        <jar jarfile="${dist}/computer.jar" basedir="${build}" includes="system/** api/**"/>
    
        <!-- Make client jar file -->
        <jar jarfile="${dist}/client.jar" basedir="${build}" includes="client/** api/** tasks/**"/>
        <!-- Copy client's task classes to client's codebase -->
        <mkdir dir="${client_file_codebase}/tasks"/>
        <copy todir="${client_file_codebase}/tasks">
        <fileset dir="${build}/tasks/"/>
        </copy>
    </target>
  
    <target name="javadoc" description="create javadocs">
        <javadoc packagenames="tasks.*,api.*" sourcepath="${src}" destdir="documents/javadoc" />
    </target>
    
    <target name="runSpace" depends="build" description="run space" >
        <java classname="system.Space" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${computer_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy.txt"/>
            <classpath>
                <pathelement location="dist/computer.jar"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>  
  
    <target name="runComputer" depends="build" description="run computer" >
        <java classname="system.Computer" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${computer_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy.txt"/>
            <arg value="${hostname}"/>
            <classpath>
                <pathelement location="dist/computer.jar"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>  
  
    <target name="runClient" depends="build" description="run client" >
        <java classname="client.Client" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy.txt"/>
            <arg value="${hostname}"/>
            <classpath>
                <pathelement location="dist/client.jar"/>
            </classpath>
        </java>
    </target>
    
    <target name="runFib" depends="build" description="run client" >
        <java classname="client.FibClient" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy.txt"/>
            <arg value="${hostname}"/>
            <classpath>
                <pathelement location="dist/client.jar"/>
            </classpath>
        </java>
    </target>

    <target name="runSalesman" depends="build" description="run client" >
        <java classname="client.EuclideanTSPClient" fork="true">
            <jvmarg value="-Djava.rmi.server.codebase=${client_web_codebase}"/>
            <jvmarg value="-Djava.security.policy=policy.txt"/>
            <arg value="${hostname}"/>
            <classpath>
                <pathelement location="dist/client.jar"/>
                <fileset dir="${lib}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="clean" description="clean up" >
        <delete dir="${computer_file_codebase}/tasks"/>
        <delete dir="${client_file_codebase}/tasks"/>
        <!-- Delete the ${build} and ${dist} directory trees -->
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
  
</project>

